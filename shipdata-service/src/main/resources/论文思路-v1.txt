=== v1 ===
1. 使用spring boot / spring security / Angular4 / Semantic UI 搭建数据展示网站.
	
	2.1 数据的录入
		1 来自文件类型的数据录入
			直接录入即可
		2 来自硬件设备类型的数据录入
			硬件设备会提供数据输出的接口
			后端api对硬件设备的接口进行适配
		3 网络爬虫采集类型数据的录入
			使用python的scrapy框架, 进行数据采集
			如果目前暂无需要真实采集的数据, 则使用scrapy框架, 实现一个爬虫数据采集的demo, 以备后续的功能扩展.

	2.2 数据的清洗
		1 文件类型数据和硬件设备类型数据(不需要清洗)
		2 网络爬虫采集类型数据(需要清洗)

	2.3 数据的存储
		1 初期使用MongoDB存储数据
		2 后期会改用分布式文件存储系统HDFS进行数据存储

	2.4 数据的展示
		使用echarts展示数据
		点击某一轮次的数据, 可以跳转到当天的数据详情页

	2.5 数据的分析
		使用echarts在前端页面进行数据分析结果的展示
		数据分析的维度[待定]

	2.6 系统安全和权限的管理
		使用spring security框架进行登录与权限管理
		实现与数据展示网站配套的内部权限管理系统

2. 使用大数据技术改进项目

	2.1 搭建由四台虚拟机[或实验室机器]组成的hadoop集群, 实现一个wordcount的demo
	2.2 使用Java / spring 操作hdfs / mapreduce实现wordcount的demo
	2.3 待定...

3. 论文点

	1. 系统的实现过程

	2. NoSQL数据库与关系型数据库的对比等

	3. 前后端分离开发 / Restful风格的接口设计

	4. 由普通的MongoDB数据库存储数据, 转变为大数据存储

	5. 安全与权限管理部分

	6. 系统的开发背景/应用场景等部分

=== v2 ===

1. 前端展示界面使用Bootstrap, 选择了一个风格相符的前端UI界面

2. 数据量比较大, 准备增加搭建mongodb集群的部分

3. 在数据处理方面, 准备使用spring batch框架提供的批处理能力, 对数量较大的文件进行处理